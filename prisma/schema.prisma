// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "sqlite"
    url      = env("DATABASE_URL")
}

model User {
    id        String   @id @default(uuid())
    name      String
    email     String
    cellphone String   @unique
    password  String
    role      String // CLIENTE, IMOBILIARIA, AGENTE or ADMIN
    createdAt DateTime @default(now())

    Cliente     Cliente?
    Agente      Agente?
    Imobiliaria Imobiliaria?
}

model Cliente {
    id  String @id
    cpf String

    user User @relation(fields: [id], references: [id], onDelete: Cascade)
}

model Agente {
    id            String  @id
    cpf           String
    creci         String
    imobiliariaId String? // Optional, as not all agents are tied to an Imobiliaria

    user        User         @relation(fields: [id], references: [id], onDelete: Cascade)
    imobiliaria Imobiliaria? @relation(fields: [imobiliariaId], references: [id])
    /**
     * One-to-many relationship with Imovel
     * agent can only associate with a Imovel if both belong to the same Imobiliaria
     * this constrait needs to be enforced in the application layer
     */
    Imovel      Imovel[]
}

model Imobiliaria {
    id   String @id
    cnpj String

    user    User     @relation(fields: [id], references: [id], onDelete: Cascade)
    agentes Agente[] // One-to-many relationship with Agente
    imoveis Imovel[] // One-to-many relationship with Imovel
}

model Imovel {
    id            String  @id @default(uuid())
    nome          String  @unique
    areaPrivada   Float
    numQuartos    Int
    numVagas      Int
    tipo          String
    enderecoId    String
    imobiliariaId String
    agenteId      String?
    escondido     Boolean @default(false)

    imobiliaria Imobiliaria @relation(fields: [imobiliariaId], references: [id])
    endereco    Endereco    @relation(fields: [enderecoId], references: [id])
    agente      Agente?     @relation(fields: [agenteId], references: [id])
}

model Endereco {
    id          String  @id @default(uuid())
    cep         Int
    logradouro  String
    numero      Int
    bairro      String
    complemento String?
    cidade      String
    estado      String

    Imovel Imovel[] // One-to-many relationship with Imovel
}
